// <auto-generated />
using System;
using Biblioteca.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Infra.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20200604004909_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biblioteca.Domain.LivroContext.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Autor","Livro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataNascimento = new DateTime(1952, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Robert Cecil Martin"
                        },
                        new
                        {
                            Id = 2,
                            DataNascimento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Eric Evans"
                        },
                        new
                        {
                            Id = 3,
                            DataNascimento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Vaughn Vernon"
                        },
                        new
                        {
                            Id = 4,
                            DataNascimento = new DateTime(1961, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Erich Gamma"
                        },
                        new
                        {
                            Id = 5,
                            DataNascimento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "John Vlissides"
                        },
                        new
                        {
                            Id = 6,
                            DataNascimento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Richard Helm"
                        },
                        new
                        {
                            Id = 7,
                            DataNascimento = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ralph Johnson"
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.LivroContext.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000);

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("SubTitulo")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Livro","Livro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ano = 2002,
                            Serial = "0000000001",
                            Situacao = 0,
                            Titulo = "Agile Software Development, Principles, Patterns, and Practices"
                        },
                        new
                        {
                            Id = 2,
                            Ano = 2009,
                            Serial = "0000000002",
                            Situacao = 0,
                            SubTitulo = "A Handbook of Agile Software Craftsmanship",
                            Titulo = "Clean Code"
                        },
                        new
                        {
                            Id = 3,
                            Ano = 2011,
                            Serial = "0000000003",
                            Situacao = 0,
                            SubTitulo = "A Code Of Conduct For Professional Programmers",
                            Titulo = "The Clean Coder"
                        },
                        new
                        {
                            Id = 4,
                            Ano = 2017,
                            Serial = "0000000004",
                            Situacao = 0,
                            SubTitulo = "A Craftsman's Guide to Software Structure and Design",
                            Titulo = "Clean Architecture"
                        },
                        new
                        {
                            Id = 5,
                            Ano = 2019,
                            Serial = "0000000005",
                            Situacao = 0,
                            SubTitulo = "Back to Basics",
                            Titulo = "Clean Agile"
                        },
                        new
                        {
                            Id = 6,
                            Ano = 2003,
                            Serial = "0000000006",
                            Situacao = 0,
                            SubTitulo = "Tackling Complexity in the Heart of Software",
                            Titulo = "Domain-Driven Design"
                        },
                        new
                        {
                            Id = 7,
                            Ano = 2013,
                            Serial = "0000000007",
                            Situacao = 0,
                            Titulo = "Implementing Domain-Driven Design"
                        },
                        new
                        {
                            Id = 8,
                            Ano = 2016,
                            Serial = "0000000008",
                            Situacao = 0,
                            Titulo = "Domain-Driven Design Distilled"
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.LivroContext.LivroAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("LivroId");

                    b.ToTable("LivroAutor","Livro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            LivroId = 1
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 1,
                            LivroId = 2
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 1,
                            LivroId = 3
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 1,
                            LivroId = 4
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 1,
                            LivroId = 5
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 2,
                            LivroId = 6
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 3,
                            LivroId = 7
                        },
                        new
                        {
                            Id = 8,
                            AutorId = 3,
                            LivroId = 8
                        });
                });

            modelBuilder.Entity("Biblioteca.Domain.LocacaoContext.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Cliente","Locacao");
                });

            modelBuilder.Entity("Biblioteca.Domain.LocacaoContext.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevistaDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TeveMulta")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Locacao","Locacao");
                });

            modelBuilder.Entity("Biblioteca.Domain.LivroContext.LivroAutor", b =>
                {
                    b.HasOne("Biblioteca.Domain.LivroContext.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Domain.LivroContext.Livro", "Livro")
                        .WithMany("Autores")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Biblioteca.Domain.LocacaoContext.Locacao", b =>
                {
                    b.HasOne("Biblioteca.Domain.LocacaoContext.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Biblioteca.Domain.LocacaoContext.Livro", "Livros", b1 =>
                        {
                            b1.Property<int>("LocacaoId")
                                .HasColumnType("int");

                            b1.Property<int>("LivroId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Serial")
                                .IsRequired()
                                .HasColumnType("varchar(100)");

                            b1.HasKey("LocacaoId", "LivroId");

                            b1.ToTable("Livro","Locacao");

                            b1.WithOwner()
                                .HasForeignKey("LocacaoId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
